/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package id.escritores;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdom2.Document;

/**
 *
 * @author paulo
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        adicionarAutorDialog = new javax.swing.JDialog();
        nomeAutorTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        adicionarAutorButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        principalMenu = new javax.swing.JMenu();
        abrirMenuItem = new javax.swing.JMenuItem();
        sairMenuItem = new javax.swing.JMenuItem();
        xmlMenu = new javax.swing.JMenu();
        adicionarAutorMenuItem = new javax.swing.JMenuItem();

        nomeAutorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeAutorTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome do Autor:");

        adicionarAutorButton.setText("Adicionar Autor");
        adicionarAutorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAutorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adicionarAutorDialogLayout = new javax.swing.GroupLayout(adicionarAutorDialog.getContentPane());
        adicionarAutorDialog.getContentPane().setLayout(adicionarAutorDialogLayout);
        adicionarAutorDialogLayout.setHorizontalGroup(
            adicionarAutorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adicionarAutorDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nomeAutorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(adicionarAutorDialogLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(adicionarAutorButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adicionarAutorDialogLayout.setVerticalGroup(
            adicionarAutorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adicionarAutorDialogLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(adicionarAutorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeAutorTextField)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(adicionarAutorButton)
                .addGap(16, 16, 16))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        jLabel1.setText("Output:");

        principalMenu.setText("Principal");
        principalMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                principalMenuActionPerformed(evt);
            }
        });

        abrirMenuItem.setText("Abrir");
        abrirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuItemActionPerformed(evt);
            }
        });
        principalMenu.add(abrirMenuItem);

        sairMenuItem.setText("Sair");
        sairMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairMenuItemActionPerformed(evt);
            }
        });
        principalMenu.add(sairMenuItem);

        jMenuBar1.add(principalMenu);

        xmlMenu.setText("XML");

        adicionarAutorMenuItem.setText("Adicionar Autor");
        adicionarAutorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAutorMenuItemActionPerformed(evt);
            }
        });
        xmlMenu.add(adicionarAutorMenuItem);

        jMenuBar1.add(xmlMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuItemActionPerformed
        // TODO add your handling code here:
        
        String texto;
        jFileChooser1.showOpenDialog(this);
        String nomeF= jFileChooser1.getSelectedFile().getAbsolutePath();
        try {
            texto=Functions.ler_ficheiro(nomeF);
            if (texto == null){
                JOptionPane.showMessageDialog(this,
                        "Apenas ficheiros XML podem ser abertos!",
                        "Warning",
                        JOptionPane.WARNING_MESSAGE);
            }
            outputTextArea.setText(texto);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_abrirMenuItemActionPerformed

    private void principalMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_principalMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_principalMenuActionPerformed

    private void sairMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sairMenuItemActionPerformed

    private void adicionarAutorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAutorMenuItemActionPerformed
        adicionarAutorDialog.setSize(500, 200);
        adicionarAutorDialog.setLocation(200, 200);
        adicionarAutorDialog.setVisible(true);
    }//GEN-LAST:event_adicionarAutorMenuItemActionPerformed

    private void nomeAutorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeAutorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeAutorTextFieldActionPerformed

    private void adicionarAutorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAutorButtonActionPerformed
        try {
            Escritores escritor = Wrappers.criaEscritor(nomeAutorTextField.getText());
            
            if(escritor != null){
                
                Document docEscritor = XMLJDomFunctions.lerDocumentoXML("escritores.xml");
                
                List<Obra> obras = Wrappers.criaObra(nomeAutorTextField.getText(), escritor.getId());
                
                Document docObras = XMLJDomFunctions.lerDocumentoXML("obras.xml");
                
                if (obras != null && !obras.isEmpty()) {
                    for (Obra obra : obras) {

                        docObras = ObrasXML.adicionaObras(obra, docObras);
                        XMLJDomFunctions.escreverDocumentoParaFicheiro(docObras, "obras.xml");
                    }
                    
                    
                    docEscritor = EscritoresXML.adicionaEscritor(escritor, docEscritor);

                    XMLJDomFunctions.escreverDocumentoParaFicheiro(docEscritor, "escritores.xml");
                    
                    JOptionPane.showMessageDialog(this,
                        "Autor e obras adicionadas com sucesso",
                        "Informação",
                        JOptionPane.INFORMATION_MESSAGE);
                    
                } else {
                    JOptionPane.showMessageDialog(this,
                        "Obras não encontradas",
                        "Informação",
                        JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        "Autor já existe no ficheiro",
                        "Informação",
                        JOptionPane.INFORMATION_MESSAGE);
            }
            adicionarAutorDialog.setVisible(false);
            nomeAutorTextField.setText("");
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_adicionarAutorButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirMenuItem;
    private javax.swing.JButton adicionarAutorButton;
    private javax.swing.JDialog adicionarAutorDialog;
    private javax.swing.JMenuItem adicionarAutorMenuItem;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeAutorTextField;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JMenu principalMenu;
    private javax.swing.JMenuItem sairMenuItem;
    private javax.swing.JMenu xmlMenu;
    // End of variables declaration//GEN-END:variables
}
